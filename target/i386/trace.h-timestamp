/* This file is autogenerated by tracetool, do not edit. */

#ifndef TRACE_TARGET_I386_GENERATED_TRACERS_H
#define TRACE_TARGET_I386_GENERATED_TRACERS_H

#include "qemu-common.h"
#include "trace/control.h"

extern TraceEvent _TRACE_KVM_X86_FIXUP_MSI_ERROR_EVENT;
extern TraceEvent _TRACE_KVM_X86_ADD_MSI_ROUTE_EVENT;
extern TraceEvent _TRACE_KVM_X86_REMOVE_MSI_ROUTE_EVENT;
extern TraceEvent _TRACE_KVM_X86_UPDATE_MSI_ROUTES_EVENT;
extern uint16_t _TRACE_KVM_X86_FIXUP_MSI_ERROR_DSTATE;
extern uint16_t _TRACE_KVM_X86_ADD_MSI_ROUTE_DSTATE;
extern uint16_t _TRACE_KVM_X86_REMOVE_MSI_ROUTE_DSTATE;
extern uint16_t _TRACE_KVM_X86_UPDATE_MSI_ROUTES_DSTATE;
#define TRACE_KVM_X86_FIXUP_MSI_ERROR_ENABLED 1
#define TRACE_KVM_X86_ADD_MSI_ROUTE_ENABLED 1
#define TRACE_KVM_X86_REMOVE_MSI_ROUTE_ENABLED 1
#define TRACE_KVM_X86_UPDATE_MSI_ROUTES_ENABLED 1
#include "qemu/log.h"


#define TRACE_KVM_X86_FIXUP_MSI_ERROR_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_X86_FIXUP_MSI_ERROR) || \
    false)

static inline void _nocheck__trace_kvm_x86_fixup_msi_error(uint32_t gsi)
{
    if (trace_event_get_state(TRACE_KVM_X86_FIXUP_MSI_ERROR)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:kvm_x86_fixup_msi_error " "VT-d failed to remap interrupt for GSI %" PRIu32 "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , gsi);
    }
}

static inline void trace_kvm_x86_fixup_msi_error(uint32_t gsi)
{
    if (true) {
        _nocheck__trace_kvm_x86_fixup_msi_error(gsi);
    }
}

#define TRACE_KVM_X86_ADD_MSI_ROUTE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_X86_ADD_MSI_ROUTE) || \
    false)

static inline void _nocheck__trace_kvm_x86_add_msi_route(int virq)
{
    if (trace_event_get_state(TRACE_KVM_X86_ADD_MSI_ROUTE)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:kvm_x86_add_msi_route " "Adding route entry for virq %d" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , virq);
    }
}

static inline void trace_kvm_x86_add_msi_route(int virq)
{
    if (true) {
        _nocheck__trace_kvm_x86_add_msi_route(virq);
    }
}

#define TRACE_KVM_X86_REMOVE_MSI_ROUTE_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_X86_REMOVE_MSI_ROUTE) || \
    false)

static inline void _nocheck__trace_kvm_x86_remove_msi_route(int virq)
{
    if (trace_event_get_state(TRACE_KVM_X86_REMOVE_MSI_ROUTE)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:kvm_x86_remove_msi_route " "Removing route entry for virq %d" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , virq);
    }
}

static inline void trace_kvm_x86_remove_msi_route(int virq)
{
    if (true) {
        _nocheck__trace_kvm_x86_remove_msi_route(virq);
    }
}

#define TRACE_KVM_X86_UPDATE_MSI_ROUTES_BACKEND_DSTATE() ( \
    trace_event_get_state_dynamic_by_id(TRACE_KVM_X86_UPDATE_MSI_ROUTES) || \
    false)

static inline void _nocheck__trace_kvm_x86_update_msi_routes(int num)
{
    if (trace_event_get_state(TRACE_KVM_X86_UPDATE_MSI_ROUTES)) {
        struct timeval _now;
        gettimeofday(&_now, NULL);
        qemu_log_mask(LOG_TRACE,
                      "%d@%zd.%06zd:kvm_x86_update_msi_routes " "Updated %d MSI routes" "\n",
                      getpid(),
                      (size_t)_now.tv_sec, (size_t)_now.tv_usec
                      , num);
    }
}

static inline void trace_kvm_x86_update_msi_routes(int num)
{
    if (true) {
        _nocheck__trace_kvm_x86_update_msi_routes(num);
    }
}
#endif /* TRACE_TARGET_I386_GENERATED_TRACERS_H */
